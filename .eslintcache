[{"F:\\traversy\\github-finder\\src\\index.js":"1","F:\\traversy\\github-finder\\src\\App.js":"2","F:\\traversy\\github-finder\\src\\components\\layout\\Navbar.js":"3","F:\\traversy\\github-finder\\src\\components\\users\\UserItem.js":"4","F:\\traversy\\github-finder\\src\\components\\users\\Users.js":"5","F:\\traversy\\github-finder\\src\\components\\layout\\Spinner.js":"6","F:\\traversy\\github-finder\\src\\components\\users\\Search.js":"7","F:\\traversy\\github-finder\\src\\components\\layout\\Alert.js":"8","F:\\traversy\\github-finder\\src\\components\\pages\\About.js":"9","F:\\traversy\\github-finder\\src\\components\\users\\User.js":"10","F:\\traversy\\github-finder\\src\\components\\repos\\Repos.js":"11","F:\\traversy\\github-finder\\src\\components\\repos\\RepoItem.js":"12","F:\\traversy\\github-finder\\src\\context\\github\\GithubState.js":"13","F:\\traversy\\github-finder\\src\\context\\github\\githubContext.js":"14","F:\\traversy\\github-finder\\src\\context\\github\\githubReducer.js":"15","F:\\traversy\\github-finder\\src\\context\\types.js":"16","F:\\traversy\\github-finder\\src\\context\\alert\\AlertState.js":"17","F:\\traversy\\github-finder\\src\\context\\alert\\alertReducer.js":"18","F:\\traversy\\github-finder\\src\\context\\alert\\alertContext.js":"19","F:\\traversy\\github-finder\\src\\components\\pages\\Home.js":"20","F:\\traversy\\github-finder\\src\\components\\pages\\NotFound.js":"21"},{"size":279,"mtime":1608810088054,"results":"22","hashOfConfig":"23"},{"size":1171,"mtime":1609286513896,"results":"24","hashOfConfig":"23"},{"size":825,"mtime":1609113665108,"results":"25","hashOfConfig":"23"},{"size":741,"mtime":1609114595422,"results":"26","hashOfConfig":"23"},{"size":681,"mtime":1609183361234,"results":"27","hashOfConfig":"23"},{"size":404,"mtime":1608914676810,"results":"28","hashOfConfig":"23"},{"size":1415,"mtime":1609264457713,"results":"29","hashOfConfig":"23"},{"size":432,"mtime":1609264333500,"results":"30","hashOfConfig":"23"},{"size":288,"mtime":1609115673619,"results":"31","hashOfConfig":"23"},{"size":2794,"mtime":1609260340186,"results":"32","hashOfConfig":"23"},{"size":318,"mtime":1609119124708,"results":"33","hashOfConfig":"23"},{"size":334,"mtime":1609119032858,"results":"34","hashOfConfig":"23"},{"size":2626,"mtime":1609260120741,"results":"35","hashOfConfig":"23"},{"size":148,"mtime":1609177567026,"results":"36","hashOfConfig":"23"},{"size":947,"mtime":1609260176727,"results":"37","hashOfConfig":"23"},{"size":291,"mtime":1609177874745,"results":"38","hashOfConfig":"23"},{"size":969,"mtime":1609265185787,"results":"39","hashOfConfig":"23"},{"size":291,"mtime":1609265055327,"results":"40","hashOfConfig":"23"},{"size":113,"mtime":1609262123494,"results":"41","hashOfConfig":"23"},{"size":256,"mtime":1609285799094,"results":"42","hashOfConfig":"23"},{"size":234,"mtime":1609286381285,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"p38fix",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\traversy\\github-finder\\src\\index.js",[],["91","92"],"F:\\traversy\\github-finder\\src\\App.js",["93"],"F:\\traversy\\github-finder\\src\\components\\layout\\Navbar.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\UserItem.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\Users.js",[],"F:\\traversy\\github-finder\\src\\components\\layout\\Spinner.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\Search.js",["94"],"import React, { useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n  //now we can use searchUsers from context\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (text === '') {\r\n      alertContext.setAlert('Please enter something', 'light');\r\n    } else {\r\n      //search users from context\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"text\"\r\n          placeholder=\"Search Users...\"\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Search\"\r\n          className=\"btn btn-dark btn-block\"\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className=\"btn btn-light btn-block\"\r\n          onClick={githubContext.clearUsers}\r\n        >\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","F:\\traversy\\github-finder\\src\\components\\layout\\Alert.js",[],"F:\\traversy\\github-finder\\src\\components\\pages\\About.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\User.js",["95"],"import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { getUser, loading, user, getUserRepos, repos } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    company,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable,\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className=\"btn btn-light\">\r\n        Back to search\r\n      </Link>\r\n      Hireable:{' '}\r\n      {hireable ? (\r\n        <i className=\"fas fa-check text-success\" />\r\n      ) : (\r\n        <i className=\"fas fa-times-circle text-danger\" />\r\n      )}\r\n      <div className=\"card grid-2\">\r\n        <div className=\"all-center\">\r\n          <img\r\n            src={avatar_url}\r\n            className=\"round-img\"\r\n            alt=\"\"\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location:{location}</p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <a href={html_url} className=\"btn btn-dark my-1\">\r\n            Visit Github profile\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username:</strong> {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company:</strong> {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website:</strong> {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"card text-center\">\r\n        <div className=\"badge badge-primary\">Followers:{followers}</div>\r\n        <div className=\"badge badge-success\">Following:{following}</div>\r\n        <div className=\"badge badge-light\">Public Repos:{public_repos}</div>\r\n        <div className=\"badge badge-dark\">Public Gists:{public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","F:\\traversy\\github-finder\\src\\components\\repos\\Repos.js",[],"F:\\traversy\\github-finder\\src\\components\\repos\\RepoItem.js",[],"F:\\traversy\\github-finder\\src\\context\\github\\GithubState.js",[],"F:\\traversy\\github-finder\\src\\context\\github\\githubContext.js",[],"F:\\traversy\\github-finder\\src\\context\\github\\githubReducer.js",["96"],"import {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        //setting the users from the data we got from GithubState\r\n        users: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        //state is immutable so we need to return it with ... ,and set loading to true\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","F:\\traversy\\github-finder\\src\\context\\types.js",[],"F:\\traversy\\github-finder\\src\\context\\alert\\AlertState.js",[],"F:\\traversy\\github-finder\\src\\context\\alert\\alertReducer.js",["97"],"import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  console.log(action.payload);\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","F:\\traversy\\github-finder\\src\\context\\alert\\alertContext.js",[],"F:\\traversy\\github-finder\\src\\components\\pages\\Home.js",[],"F:\\traversy\\github-finder\\src\\components\\pages\\NotFound.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":13},{"ruleId":"102","severity":1,"message":"106","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"106","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":9,"column":1,"nodeType":"109","endLine":46,"endColumn":3},{"ruleId":"107","severity":1,"message":"108","line":3,"column":1,"nodeType":"109","endLine":14,"endColumn":3},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]