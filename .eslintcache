[{"F:\\traversy\\github-finder\\src\\index.js":"1","F:\\traversy\\github-finder\\src\\App.js":"2","F:\\traversy\\github-finder\\src\\components\\layout\\Navbar.js":"3","F:\\traversy\\github-finder\\src\\components\\users\\UserItem.js":"4","F:\\traversy\\github-finder\\src\\components\\users\\Users.js":"5","F:\\traversy\\github-finder\\src\\components\\layout\\Spinner.js":"6","F:\\traversy\\github-finder\\src\\components\\users\\Search.js":"7","F:\\traversy\\github-finder\\src\\components\\layout\\Alert.js":"8","F:\\traversy\\github-finder\\src\\components\\pages\\About.js":"9","F:\\traversy\\github-finder\\src\\components\\users\\User.js":"10","F:\\traversy\\github-finder\\src\\components\\repos\\Repos.js":"11","F:\\traversy\\github-finder\\src\\components\\repos\\RepoItem.js":"12","F:\\traversy\\github-finder\\src\\context\\github\\GithubState.js":"13","F:\\traversy\\github-finder\\src\\context\\github\\githubContext.js":"14","F:\\traversy\\github-finder\\src\\context\\github\\githubReducer.js":"15","F:\\traversy\\github-finder\\src\\context\\types.js":"16"},{"size":279,"mtime":1608810088054,"results":"17","hashOfConfig":"18"},{"size":2074,"mtime":1609183717785,"results":"19","hashOfConfig":"18"},{"size":825,"mtime":1609113665108,"results":"20","hashOfConfig":"18"},{"size":741,"mtime":1609114595422,"results":"21","hashOfConfig":"18"},{"size":681,"mtime":1609183361234,"results":"22","hashOfConfig":"18"},{"size":404,"mtime":1608914676810,"results":"23","hashOfConfig":"18"},{"size":1368,"mtime":1609183324180,"results":"24","hashOfConfig":"18"},{"size":274,"mtime":1608924222680,"results":"25","hashOfConfig":"18"},{"size":288,"mtime":1609115673619,"results":"26","hashOfConfig":"18"},{"size":2900,"mtime":1609184119713,"results":"27","hashOfConfig":"18"},{"size":318,"mtime":1609119124708,"results":"28","hashOfConfig":"18"},{"size":334,"mtime":1609119032858,"results":"29","hashOfConfig":"18"},{"size":2158,"mtime":1609183936629,"results":"30","hashOfConfig":"18"},{"size":148,"mtime":1609177567026,"results":"31","hashOfConfig":"18"},{"size":824,"mtime":1609183644329,"results":"32","hashOfConfig":"18"},{"size":291,"mtime":1609177874745,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"p38fix",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"F:\\traversy\\github-finder\\src\\index.js",[],["69","70"],"F:\\traversy\\github-finder\\src\\App.js",["71"],"import './App.css';\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nimport GithubState from './context/github/GithubState';\n\nconst App = () => {\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  //Get users repos\n  const getUserRepos = async (username) => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  //Set alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  };\n\n  return (\n    <GithubState>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={(props) => (\n                  <Fragment>\n                    <Search setAlert={showAlert} />\n                    <Users />\n                  </Fragment>\n                )}\n              />\n              <Route exact path=\"/about\" component={About} />\n              <Route\n                exact\n                path=\"/user/:login\"\n                render={(props) => (\n                  <User {...props} getUserRepos={getUserRepos} repos={repos} />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  );\n};\n\nexport default App;\n","F:\\traversy\\github-finder\\src\\components\\layout\\Navbar.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\UserItem.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\Users.js",[],"F:\\traversy\\github-finder\\src\\components\\layout\\Spinner.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\Search.js",[],"F:\\traversy\\github-finder\\src\\components\\layout\\Alert.js",[],"F:\\traversy\\github-finder\\src\\components\\pages\\About.js",[],"F:\\traversy\\github-finder\\src\\components\\users\\User.js",[],"F:\\traversy\\github-finder\\src\\components\\repos\\Repos.js",[],"F:\\traversy\\github-finder\\src\\components\\repos\\RepoItem.js",[],"F:\\traversy\\github-finder\\src\\context\\github\\GithubState.js",["72"],"//initial state and actions\r\nimport React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\n\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n} from '../types';\r\n\r\nconst GithubState = (props) => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n  };\r\n\r\n  //we call an action,get some data,then dispatch that action\r\n  //to our Reducer, so we need useReducer hook\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  //Search Users\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n\r\n    //payload is the data we need to dispatch\r\n    //and in Reducer we are setting it to users\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items,\r\n    });\r\n  };\r\n  //Get User\r\n\r\n  const getUser = async (username) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  };\r\n  //Get Repos\r\n\r\n  //Clear Users\r\n  const clearUsers = () => {\r\n    dispatch({\r\n      type: CLEAR_USERS,\r\n    });\r\n  };\r\n  //Set Loading\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  //we are returning Provider so we can wrap all the app in  it\r\n  //value contains all attributes that we wanna make accessible globally\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","F:\\traversy\\github-finder\\src\\context\\github\\githubContext.js",[],"F:\\traversy\\github-finder\\src\\context\\github\\githubReducer.js",["73","74"],"F:\\traversy\\github-finder\\src\\context\\types.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":16,"column":10,"nodeType":"81","messageId":"82","endLine":16,"endColumn":17},{"ruleId":"79","severity":1,"message":"83","line":12,"column":3,"nodeType":"81","messageId":"82","endLine":12,"endColumn":12},{"ruleId":"79","severity":1,"message":"83","line":6,"column":3,"nodeType":"81","messageId":"82","endLine":6,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":9,"column":1,"nodeType":"86","endLine":40,"endColumn":3},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'GET_REPOS' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]